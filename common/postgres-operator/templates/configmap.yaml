apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-operator
data:
  # the env var with the same name in the operator pod may overwrite this value
  # if neither is set or evaluates to the empty string, listen to the operator's own namespace
  # if set to the "*", listen to all namespaces
  watched_namespace: "*"
  cluster_labels: application:spilo
  cluster_name_label: version
  pod_role_label: spilo-role

  # spilo image (patroni / postgres bundle)
  docker_image: {{ .Values.operator.image }}:{{ .Values.operator.imageTag }}

  # service-account of the operator
  pod_service_account_name: {{ .Values.serviceaccount.name | default "postgres-operator" }}

  # database user names
  # name for the superuser, set during initialization (initdb) and later used by Patroni to connect to the postgres.
  super_username: {{ .Values.operator.super_username | default "postgres" }}
  # replication username; the user will be created during initialization. Replicas will use this user to access master via streaming replication
  replication_username: {{ .Values.operator.replication_username | default "standby" }}
  # naming format of k8s secrets that contain user/pwd credentials of db users
  secret_name_template: "{cluster}.{username}.credentials"

  node_readiness_label: {{ .Values.operator.node_readiness_label | default "" }}

  # pod-disruption-budget
  pdb_name_format: {{ .Values.operator.pdb_name_format | default "{cluster}-postgres-pdb" | quote }}
  
  # pod lifecycle configuration settings: timeouts
  pod_deletion_wait_timeout: {{ .Values.operator.pod_deletion_wait_timeout | default "10m" }}
  pod_label_wait_timeout: {{ .Values.operator.pod_label_wait_timeout | default "10m" }}
  pod_terminate_grace_period: {{ .Values.operator.pod_terminate_grace_period | default "5m" }}
  ready_wait_interval: {{ .Values.operator.ready_wait_interval | default "3s" }}
  ready_wait_timeout: {{ .Values.operator.ready_wait_timeout | default "30s" }}

  enable_master_load_balancer: "false"
  enable_replica_load_balancer: "false"

  # team-api settings
  # to enable oAuth postgres access
  enable_teams_api: "false"
  enable_team_superuser: "false"

  # Cluster Sync config
  resource_check_interval: {{ .Values.operator.resource_check_interval | default "3s" }}
  resource_check_timeout: {{ .Values.operator.resource_check_timeout | default "10m" }}
  resync_period: {{ .Values.operator.resync_period | default "10m" }}
  repair_period: 5m

  # number of working routines the operator spawns to process requests to create/update/delete/sync clusters concurrently.
  workers: {{ .Values.operator.workers | default "4" | quote }}

  # Rest API for basic operator metrics
  api_port: {{ .Values.operator.api_port | default "8080" | quote }}

  # logging stuff
  debug_logging: {{ .Values.operator.debug | default "true" | quote }}
  ring_log_lines: {{ .Values.operator.ring_log_lines | default "100" | quote }}
  cluster_history_entries: {{ .Values.operator.cluster_history_entries | default "1000" | quote }}
