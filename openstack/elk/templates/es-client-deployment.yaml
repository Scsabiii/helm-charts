apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: es-client
  namespace: elk
  labels:
    system: openstack
    service: logging
    component: elasticsearch
    role: client
  annotations:
    kubernetes.io/change-cause: {{.Values.cluster_deployment_reason}}

spec:
  replicas: {{.Values.elk_elasticsearch_client_replicas}}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: {{.Values.elk_elasticsearch_client_replicas}}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: client
      annotations:
        checksum/elk-templates-es-etc-configmap.yaml: {{ include "elk/templates/es-etc-configmap.yaml" . | sha256sum }}
        checksum/elk-templates-es-bin-configmap.yaml: {{ include "elk/templates/es-bin-configmap.yaml" . | sha256sum }}
        checksum/elasticsearch.yml.tpl: {{ include "elk/templates/etc/_elasticsearch.yml.tpl" . | sha256sum }}
        checksum/jvm.options.tpl: {{ include "elk/templates/etc/_jvm.options.tpl" . | sha256sum }}
        checksum/log4j2.properties.tpl: {{ include "elk/templates/etc/_log4j2.properties.tpl" . | sha256sum }}
        checksum/elasticsearch-start.tpl: {{ include "elk/templates/bin/_elasticsearch-start.tpl" . | sha256sum }}
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: es-bin
          configMap:
            name: es-bin
        - name: es-etc
          configMap:
            name: es-etc
      containers:
        - name: es-client
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
                - SYS_RESOURCE
          image: {{.Values.docker_repo}}/elk-elasticsearch:{{.Values.elk_image_version_elasticsearch}}
          imagePullPolicy: IfNotPresent
#          command: ["/usr/local/bin/dumb-init", "/bin/bash", "-c", "while true; do sleep 1000; done"]
          command: ["/usr/local/bin/dumb-init", "/bin/bash", "/es-bin/elasticsearch-start"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_CA_CERTIFICATE_FILE
              value: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            - name: NODE_MASTER
              value: "false"
            - name: NODE_DATA
              value: "false"
            - name: HTTP_ENABLE
              value: "true"
          volumeMounts:
            - mountPath: /es-bin
              name: es-bin
            - mountPath: /es-etc
              name: es-etc
          ports:
            - name: transport
              containerPort: {{.Values.elk_elasticsearch_port_cluster}}
              protocol: TCP
            - name: http
              containerPort: {{.Values.elk_elasticsearch_port_internal}}
              protocol: TCP
            - name: dummymasterport
              hostPort: {{.Values.elk_elasticsearch_client_dummy_port}}
              hostIP: 127.0.0.1
              containerPort: {{.Values.elk_elasticsearch_client_dummy_port}}
