{{ range $cluster_id, $config := .Values.limes.clusters }}
kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: limes-collect-{{$cluster_id}}
  labels:
    app: limes-collect
    release: "{{$.Release.Name}}"

spec:
  minReadySeconds: 10 # to capture errors from config/constraint parsing
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: limes-collect-{{$cluster_id}}
  template:
    metadata:
      labels:
        name: limes-collect-{{$cluster_id}}
        app: limes-collect
      annotations:
        checksum: {{ include "limes/templates/configmap.yaml" $ | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      volumes:
        - name: config
          configMap:
            name: limes
      containers:
        - name: collect
          image: {{include "limes_image" $}}
          imagePullPolicy: {{$.Values.limes.image_pull_policy}}
          args:
            - collect
            - /etc/limes/limes.yaml
            - {{$cluster_id}}
          env:
            - name: LIMES_DEBUG
              value: '0'
            - name: LIMES_DEBUG_SQL
              value: '0'
            {{- if eq $cluster_id "monsoon2" }}
            - name: LIMES_INSECURE
              value: '1' # SSL certificates are hard :(
            {{- end }}
          volumeMounts:
            - mountPath: /etc/limes
              name: config
          ports:
            - name: metrics
              containerPort: 8080
---
{{end}}
